#Tasks

12/8

x add options for camera capture size
x add filecam
x add outer loop to reset camera
dont mirror camera_usb=1
record a video
write a small utility that calculates fps from time in video


12/2

find all camera sizes
hello world on the pi-camera

12/1

working well at 10 feet
1280p
rgb: (orange ball) [  0  96 192] [ 88 232 255]
blur 11, repair 2

green sharpie:  [ 15 106  86] [ 81 171 148]

increasing thresh_pct > 0.95 helps with motion blur

11/24

x agenda nextstep triggers them all - sw_ not reset?, or gui firing too much?
x test and debug agenda reset
x it does create a new folder in write_dir for each agenda
x does it reset for a new color ball? yes.
x it takes the first img after reset from the last old_pos for tracking_frame
x two pictures from initial center_tracking frame, make it one
x set the gui from a output_rgb_set
x extend to hsv
x refactor globeGui
x refactor gui to eliminate extraneous
x print output as values
x little wider display
x update gui-hsv-output after runIterThreshA
x verify that thresh_pct is different
x better printout for solves
x less verbose
x have outcome stats display
x Proof-of-Concept: do iterThresh with 1 training image, then multiple training images
x better perf? - yes
x at least wider thresh? -yes
x call iterThreshB from gui
x tracking params from gui
x agenda.combine_threshes: transformA(img.copy(), blur = 1, b_hsv = True)

iterThreshB outputs initthresh? Not exactly but still seems sketchy

Show-How-Far-You-Can-See-Ball
x tracking success displayed to output
x display shows wide circle around putative ball
also diagnose iterThreshB on 
also display radius and num_of_cnts_found on display

Most important:

    Resize

    File_Cam


Can do an iterthreshB agenda creating a mask where there are FP's?

do the tracking without resize
find a way to know if it sees anything and what width?
    "is it seeing the ball way out there? What's the furthest it can see the ball?"




x take off delay for startup
x preview-display horizontal mirroring
x display other types of images  -> 2x cv windows?
x hist for the rect
x background histos
x flip transformed image
x params for adapt thresh
x options
x proc histo only onshow
x change frame and get histo
x show background_histos
x adaptive y_lim
x why doesnt the hard coded y_hi change for 6th plot?
x make subplot 2 by 3 not 1 by 6
x make a reset of current_tracking_frame force a resize in histos
x display a transform window
x organize function to imports
x pull out np.histogram from updating function
x large blocks to functions
x ptions to a function
x global modify from options-func
x display transform and mask as smaller
x need to get globals set in Options
x pause on a picture for searching for thresh_params
x write-out pics
x write rect non-transform
x write all to same dir
x write other pics
x frame isnt copied?  

tranform and regular img track

do a np.histo work on n
threshold pct array
expand and contract threshold

waitkey switch statement
write out video
print in raw_input with carriage return
histo labeled hsv for hsv histos
options for backghisto
do a thresh on each histo
display info in histo title

adapt_thresh for saved videos
eval in options
3rd rgb-plot-pane rect before vs. current "background before ball was there"
search_thresh
do agenda
zeromq messaging for log
run on pi

#Questions

Q does a switch statement make waitkey more responsive?
Q resolve ugly globals code
Q organize imports to and classes

> python adaptive_thresh.py --showbackghisto --showhisto

> set_thresh 80 100 100 130 200 200
150 130 90 200 210 200
100 130 90 200 210 200
0 130 90 100 210 200

speed up histo proc:
    keep it all numpy
    only when updating
    create tests, test data


#Questions

Locate / Track 
    -  how many shapes are there?

#Notes

why current LiveHist is bad
    matplotlib window can't be moved after startup
    makes peview-display jittery
        could this be solved with threading?
    makes cvWaitkeys not responsive

    solution is an html/js app in browser with http interface

