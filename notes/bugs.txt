#Tasks

10/5

    [x] add a --startplay for debugging

    bugs:
        [x] output7.avi - frame 220 has a a zoom_img with width=0, breaks
        [x] output7.avi - frame 223, can't retreat frame

10/3 - 10/5

    [ ] build training video on output8.avi

    [ ] add tracking algo module

        [x] basic tracking
            [x] show in main window
            [x] show in zoom window
                [ ] show last zoomWindow when track fails
            [x] add cli option
            [x] add gui element
            [x] work with rotation
            [x] work with different size images
            [ ] handle obviously false-positive, e.g. whole screen
            [ ] pause on failed track
        
        [ ] add training agenda

        [ ] add iterThreshA

        [ ] add a parameters module separate from code
        [ ] add a way to view/edit params: maybe by file, 
            [ ] then a reset-to-default button on gui
            [ ] then a refresh tracking on gui
        
        [ ] comparison module
            [ ] two trackers, display both results
                [ ] zoom_display enclosing for both

        [ ] more videos
            [ ] better organized
            [ ] orange ball

        [ ] Need to divorce tracking/scoring display from zoomRect

    [ ] bugs discovered
        [ ] zoom_display freezes after video recycles
        [ ] show zoom_display previous when no track found 
            ("ball is likely near there, you'll want to investigate")
        [x] output6.avi fails on getFrame() and it's semiloaded
        [ ] can't do a separate zoom with trackOn, maybe make it a separate display? 
        
          

    [ ] add a way to overwrite frame note attribute(s) in batch:
        in notes/framenoteoveride.json

    [ ] add tests for guiview / Display

        [ ] rotate
        [ ] crop
        [ ] modulo zero
        [ ] overwrite frameNote
        [ ] writeout scoring

    [ ] build additional training videos:
        [ ] Lossless
        [ ] Mask for background
        [ ] process the additional video

10/2

    [x] fix --dir with multiple orientations

    [~] add frames to existing video (not possible AFAIK)

    [x] compression radio button
        [x] contorls vidwriter
        [x] defaults to metalog compression value fourcc_enum

    [x] dont erase framenotes when video re-cycles

    [x] dir is broken on data/proc/demo-proc folder
    
    [x] write processing-compressiontype in proc-data for output metalog

    [x] semi-preload
        [x] default to this when preloaded and file size is too large
        [x] demonstrate with output8

    [x] bug in semiloaded: starts at last frame loaded

    [x] keypress basics

    [x] overwrite frame note template
    


10/1

    [x] run tests
    [x] Bug Fix & Review roi/zoom
        [x] review select roi
            [x] draw in main vs draw in zoom
            [x] draw in mod0 vs draw non-mod0
            [x] at 1280
    [x] getScore -> metalog json
        [x] gui elements
        [x] reset frameScoring or in Display
    
    [x] build two training videos

    [x] show on replay
        [~] gui element
        [x] cli option --showscoring
        [x] add delay for score or train
            [x] different for file vs dir
        [x] follow with zoom cam
        [x] different color blue to show pre-scored
        [x] how to overwrite / compare scorings?
            [x] "add additional non-scored as scored"
                [x] load to framesDataExisting
        [x] does log of a processed
        

    [ ] other todos
        [ ] 
    [ ] other tests

9/30

    [x] Can't do another zoomSelect that's small:
    
            zoom_img  = resize_img(zoom_img, True, (widthZoom, heightZoom))
                ...
            TypeError: integer argument expected, got float

9/26

    [x] write up commands.txt
        [x] using tail with proc's .metalog
        [x] using --framelog for custom .jsonc

    [x] intellisense for cv2

        hasn't worked since upgraded pip install opencv-contrib-python
        ok, so from cv2 import * gets it to work

        [ ] file bug for this

        [ ] file bug for python.analysis pop-up, or fix

        [ ] how to turn off inline-breakpoint displays: margin glpyhs on?

    [x] paneFactory
        
        [x] mimic existing function, e.g.  output7.avi

        [x] add selectROI
        
            [x] resize during selectROI bug
                maybe b/c it's resize to wrong dimensions?
                http://answers.opencv.org/question/84985/resizing-the-output-window-of-imshow-function/
                https://stackoverflow.com/questions/47524734/selecting-roi-in-auto-resized-window

        [x] zoom window

            [x] need "mod" / "%" padding on zoom frame, so zoom box will convert to whole integer
                coords in main img

            [x] need to make a circle within bounding box? or only afterwards?
                [ ] how to cut img pixels out of a circle?

9/25

    [ ] notes factory
        [ ] notesFactory.getOrientation -> paneFactory
        [ ] notesFactory.getCompression -> guiInterface(g.CompressionType)
            (which then flows thru to outputFactory)
        [ ] notesFactory filters DirectoryFactory for notes attributes
        [x] add tests
    [x] guiveiw.jsonc
    [x] per frame json
    [ ] guiview output finish.
        [ ] add tests
    [ ] pane Factory
        [ ] two extra windows
        [ ] one extra large window
        [ ] sub window image zoom
        [ ] bbox on subimage <- bbox_main
            [ ] conversion coord's back to main
        [ ] img_rotate based on orientation
        [ ] gui.update(scoringFeatures)

    need new opencv to get selectROI:
    
    https://stackoverflow.com/questions/42387322/how-to-add-tracker-in-opencv-python-2-7
    https://pypi.org/project/opencv-contrib-python/3.3.0.10/
    cv2.__version__ = '3.2.0'
    Lib/site-packages/cv2.pyd (modified 12/23/2016)
    opencv folder in downloads is modified 5/6/2017

    upgrading from pip 9.0.1 to 18.0

    C:\Users\wsutt\Desktop\files\ppd\ppd>
    C:\Users\wsutt\Desktop\files\ppd\ppd>pip install opencv-contrib-python==3.2.0.8
    Collecting opencv-contrib-python==3.2.0.8
    Downloading https://files.pythonhosted.org/packages/f9/01/7c80c13a9b8de8c15da5568a90bcc7a33ce345651613e9af14d7eb23d741/opencv_contrib_python-3.2.0.8-cp27-cp27m-win32.whl (24.4MB)
        100% |UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU| 24.4MB 605kB/s
    Requirement already satisfied: numpy>=1.11.1 in c:\python27\lib\site-packages (from opencv-contrib-python==3.2.0.8) (1.14.5+mkl)
    Installing collected packages: opencv-contrib-python
    Successfully installed opencv-contrib-python-3.2.0.8

    now it lives in it's own folder: site-packages/cv2/cv2.pyd


9/24

    [x] fix write_time_bad test: need to delete more than just .txt in test setup
    [x] file bug report on pause/continue for basic()
        #https://github.com/Microsoft/ptvsd/issues/837

9/23

    [x] refactory directoryFactory to outputFactory
    [x] add snap vid write button
    [ ] add config to the button; green if written; reset if new frame
    [ ] add [separate] button to snap-write-frame and hand-scored data
    [ ] add writeframe-writescoredata-and-advance button/keypress
    [x] need way to view frame notes as we step-thru (tail -f outputX.metalog)
    [ ] add output compression-type to gui and OutputFactory
    [ ] add output as image option

    [ ] add tests for output functionality
        [x] does it write; size > x
        [x] can it advance without writing?
        [ ] does it match a premade vid? only certain frames, only certain contguous frame regions
        [x] do two outputs
        [x] non-default framesize
        [x] snapWriteFrame
        [x] test log output
        [x] test log output when no good log exists
        [x] test frame json
        [ ] test time it takes to write new json metalog each time

    [x] log outputs:
        [x] timelog
        [x] import notes from metalog
        [x] frame json onto metalog
            [x] does it update each time on disk?
                [x] this could be slow? (0.015 secs at most)
            [x] viewable with tail? (yes)

    [ ] open an existing video file, write new frames to it:
        this could be useful for adding additional training frames after experiment
        is originally built

        [ ] use --output for this?
        [ ] or, use gui for that? 
            [ ] with set button, that shows validation

    [ ] remove scratch work from git:
        create mode 100644 demo_sub.py
        create mode 100644 test/demo_dub.py
        create mode 100644 test/demo_subproc.py
        create mode 100644 test/demo_test.py

    [ ] refactor .txt -> .framelog

    [x] build mini-app to test tkinter debug ability
    [ ] look at gui.call_cmd: sv.get() instead of globals,
        see if that helps with debug mini-app multi-thread debug ?
        does it help with space-hold-down-crash?

    [ ] filter vid names, e.g. with or without "proc"




9/22
    
    [ ] Testing guiview updates
        [ ] shorten videos to 25 frames in basic
        [ ] change true_time to reflect a 25 frame vid (cumtime=0.8316 @frame 25)

    [x] Build output feature:
        [x] why isn't VidWriter showing up in directory?
        
    [ ] why does holding down pause-button cause the program to exit without err msg?


9/21

    [x] Testing guiview
        [x] add tests/
        [x] add template for tests on guiview
        [x] add structure of tests to guiview

            since we're running in Popen we need to write out data to tmp file
            or do we? we can do asserts within mock_test() and raise an error and capture in stderr on the console?

        [ ] build a test_timeout function on a thread
        
        [ ] try some of the features in vscode:
            https://code.visualstudio.com/docs/python/unit-testing

        [x] build 12 tests

        [ ] shorten test data: cut the videos down

    [ ] add a preload which checks for memory usage; doesn't overflow
    [ ] add a "streaming" preload, holds N previous frames and pops last one off
        each frameloop

    [x] dot operator for uniqueFn
    [ ] find-project-root function

9/20

    [ ] how to raise opencv warnings to 'except' in python.
        e.g. in frameFactory.setCam throws:
            warning: Error opening file (/build/opencv/modules/videoio/src/cap_ffmpeg_impl.hpp:578)
        do this?
            warnings.filterwarnings('error')
    
    [x] why does pause_on_first_frame opens show frame_i:1 (not 0?)
        [x] and you have t=.03 not(t=0) ?

    [x] frame delay radio above fn on gui

    [x] add slowdown value

    [x] refactor updateGui into by-vid and by-frame


9/19

[x] diagnose gui issues:

    The key was to call build_gui_c() in thread-inheriting class's __init__:
    That way the self of myGui/BuildGuiC can refer to tk elements 
    populated in build_gui_c()

    [x] is this why debug didn't work?

        no, debug (with gui) still fails to recover from pause: both tkinter 
        and opencv windows become unresponsive. And hitting puase again doesn't work

        [ ] Can this debugger handle an arbitrary second thread
        [ ] Can this debugger handle a tkinter second thread with no globals?
            if so, replace globals with queues

        [ ] One way to fix threading is to have main thread call get() from guiInterface
    
    [ ] Implement queue for globals? 
        https://pymotw.com/2/Queue/
    
    here's where the code was lifted:
    https://stackoverflow.com/questions/459083/how-do-you-run-your-own-code-alongside-tkinters-event-loop
    
[x] Refactor:
    [x] remove vars from GlobalsC
    [x] refactor frameFactory updateGui into own class in GuiC
    [x] remove old issues from guiview head-notes
    
[ ] Refactor - rename and move vidwriter and miscutils to modules
    [ ] refactor their imports
    [ ] keep tests running

[x] exit opencv window on gui close


[ ] frameDelay bugs:
    [ ] turning on/off pauses vid

[x] finish basic guiview features
    [x] all updateGui   - 10:15
    [x] timeFactory     - 10:45
    [x] extra flags     - 11:00
    [x] extra radio buttons -11:15
    [x] initial gui config
    [x] pause on open
    [x] directoryFactory

[x] add to guiview to commands.txt  -11:15
[ ] write a narrative-log entry     -11:15

[ ] investigate advanced features:
    [ ] shortcut keys tkinter
        [ ] do you need forcus on a particular button for them to register
        [ ] or do we need to register them to opencv window?
    [ ] ROI selection

[ ] build intermediate features on guiview:
    [ ] output image/video
    [ ] read images
        [ ] go into subdirectories

[ ] still need testing on guirecord

[ ] I would like some multi-thread safe data structures, jeez these crashes
    and can't debug; do they fix?

[ ] VScode fixes/updates:
    [ ] get python intellisense msg to stop popping up
        Starting Microsoft Python language server.
        Initializing for C:\Python27\python.exe
        [Error - 2:32:44 PM] Request textDocument/completion failed.
        Message: Start and End must be well ordered
        Code: -32000 
        [object Object]
        object Object]
        [Error - 6:50:34 AM] Request textDocument/completion failed.
        Message: Collection was modified; enumeration operation may not execute.
        Code: -32000 
        [object Object]
    [ ] get a way to do terminal in vscode, and restore 2-panel editor
    [ ] but break points on the margin, not inline

9/17

[x] clean up existing diffs
    [x] add argparse to guirecord
    [x] remove all prints

[x] finish books/sync-frame
    [x] add a demo for sleep schedule #1
    [x] add a demo for sleep schedule #2
    
[x] write up learnings on frame-sync
    [x] and continuing questions

[x] add metadata file
    [x] feed notes in from file

[x] verify logitech camera has same behavior as internalwebcam
[x] verify --funkyread handles sleepschedule differently

[ ] build guiview.py like (fbf2.py)

    [x] check if that basic app structure can be debugged?
        must debug guiview and GuiC separately, 
        run debug config: guiview-main for launch with --nogui

    [ ] gui features
        [ ] get keypress in tkinter
        [ ] zoom in on vid window

    [x] slowdown frames with timelag

    [x] annotate filename on video

    [ ] Note: arrow keys and mouse are used for both scoring (drawing a ground truth circle)
              and for zooming
    
    [ ] separate gui for hand scoring the data
        [ ] create a .scorelog files
            - could be testing whether algo has found the correct obj
            - could be the ground-truth for where the ball is
            - indexed by frame_num
    
    [ ] separate function for drag/select ROI, and processing of that ROI 
        (e.g. create seed thresh-hold)

    [x] --dir to go thru all vids
        [ ] a dir box

    [ ] a settings sqlite db to hold last settings
        [ ] directory
        [ ] zoom settings - ROI

    [ ] do images too

    [x] display on gui
        [x] frame num
        [x] time t=
        [ ] time since last frame

    [ ] display metadata / notes:
         in zmq shell?

[ ] build vidprobe
    [ ] --dir to probe all file in a dir
        [ ] -r recursively probe
    [ ] list
        [ ] num frames
        [ ] running time according to frametimelog
        [ ] file size
        [ ] frame size
        [ ] some description/notes
        [ ] date modified
        [ ] encoding

    filter by criteria:
        [ ] criteria in notes (e.g. ball_present = True)
        [ ] criteria of num_frames, etc

    [ ] works for images too


[ ] Build mock tests for guirecord and timelog

    a test function will call guirecord in a subprocess with cmd args:
    these cli args override initial states of globals at beginning of script
    a warm up period is given to check in body, then cmd_record_on is called
    and at end of num_record_frames you go to exit,
    this creates vid and log files in the test directory of choice
    then you load the data from these files into test function and do:
     - asserts on various stats of the data
     - display/graph the benchmark vs test data in ipython

Note: tracking in guiveiw is really tracker.score(current_frame). 
      But what we're really looking for "seed" / training img before that
      train the image to later i.d. it scoring frame:
      train_img.append(img1)
      train_img.append(img2)
      tracker.train(train_imgs)
       ->
      tracker.score(current_frame)


9/13


[x] need a way to know when recordOn starts in 1-col frame-timing-logs
    [x] add detailed vs simple timelog to gui

[x] going to need a buffer way to record at 1920
    [x] or just hack it with a list of frames
        [x] add hack to gui
        [x] add mem-break to gui (?) rolling create files
        [x] add compression selection to gui

[x] Add noncompression module
    [x] find a noloss codec
    [~] or write the frames as png's
    [x] test this in ipython notebook

[ ] Get an ffmpeg script to convert the vids to correct time

    C:...Downloads\ffmpeg-20171209-f20c8f6-win64-static\bin>ffmpeg -f h264 -i ../../60secondvid.h264  ../../60test.mp4

[ ] Changes to adapt_thresh:
    [ ] allow it to play file-vids
    [ ] do agenda with file-vids
    [ ] do agenda manually with dragging ROI, mousing, etc..

[ ] Get some videos!
    [ ] of long distance range
    [ ] build a notes/schema of vid creates
    [ ] cut the videos to particular images

[ ] Cut the tracking algo out of iter_thresh

[ ] Build a batch processing for all the images

[ ] get cv2 intellisense in vscode


9/12

[x] b_resize to gui
[~] output logfile even without record
[x] setup timelog benchmark directory
[x] record some vids
[ ] build unittests
    [ ] without recording, using existin
    [ ] new rcordings

9/10

[x] Build TimeLog to completion
    [x] add attribute of previewing vs recording to TimeLog
    [x] Build a analysis util for summary stats

[x] Do a demo of analysis:
    [x] framerate under dif framesize
    [x] framerate w/ w/o output
    [x] framerate w/ w/o preview window
    [x] add to commands.txt
    [~] Adding a graphing module

[~] Build some unittests for TimeLog

[~] Make a DB module instead output file



9/6

[x] preview frame on/off
[x] frame size
    [x] frame size on vidwrite
    [x] change frame size in display

[x] cam num
[ ] read from file cam
    [ ] with slowdown b/w frames

[ ] perf testing module
    [ ] difference in fps when preview on/off?
    [ ] difference when putting frame data into holding var instead of out.write
    

8/11

[x] refresh knowledge
[ ] Jumpcut logic
    BUGS:
    [ ] first record as jumpcut throws quasi-crashing error
        notes:
            but jumpcut does work if you do a newfile first
            
    [ ] no way to stop recording jumpcut w/o quitting

        [ ] what if you do new file while record is on?
        [ ] what if you do new file while record is off?


8/6

[ ] Finish jumpcut logic

[ ] Onto...
    [ ] preview window on/off
    [ ] continue record ("jump cuts") or new video after each toggle
    [ ] frame size
    [ ] cam num

8/3

[x] directory text input
    [x] set on init
    [x] read on edit
    [x] color based validation
    [x] change the uniqueFn of the directory

    BUGS:
    hypothesis: can't call from guirecord with gui.myGui.method() -> tk.elem.config()
                can only call config methods from guiB events
    [x] verified and fixed
         

[ ] toggle newFile vs. jumpCut

[ ] see if this can be debbuged via vscode

    
    

8/2

[x] fix writevid1
[x] verify tests, list in commands.txt
    [x] writevid1 line 77-78
    [x] make sure this works from CLI too, not just unit tests
    [x] fix other problems in tests?

[x] hello guirecord.py by 9am

[x] Basic Control Flow
    [x] preview without record
    [x] don't init vidwrite untill record

[x] get a uniquefn textbox with record toggle working by 1020am:
    [x] how to handle preview cam?
    [x] toggle record button
        [x] does the action
        [x] change the visual element of button onState
        [?] multiple actions
    [x] uniqueFn text box
        [x] read from view to model
        [x] set width
        [x] update from model to view
        [x] when to update/re-run
        [ ] how to handle user entered non-uniqueFn, just overwrite?

    BUGS:
    [x] release vidwrite onEndRecord (so we can view it in file explorer)
    [ ] toggling record is overwriting
    [x] need to re-run uniquefn after each toggle?
    [ ] get ext from filename


[ ] Then, add a directory selection gui elem








7/26

[ ] start copying GuiA ton GuiB
    [ ] what's the point of GlobeGui?
    [ ] record button
    [ ] time to record field: default 999
    [ ] preview window on/off
    [ ] continue record ("jump cuts") or new video after each toggle
    [ ] frame size
    [ ] cam num
    [ ] uniqueFN textbox
    [ ] directory textbox
    [ ] codec combobox
    [ ] draw onto frame:
        [ ] currently recording
        [ ] countdown to record-start-time
    
[ ] If we did cProfile we'd know info on processing time
    [ ] do num frames recorded change b/w:
        [ ] gui on/off
        [ ] preview on/off
    [ ] how will cprofile work since we don't have subfunctions?
    [ ] can we read the cam faster with threading?

7/25

[x] do preview/warmup
[x] hello gui
[ ] add a gui

7/24

[x] test input_fn
[x] Build Tests

7/19

[x] bug - Why does writevid1.py at framesize 1280,720 get read by VLC correctly? 
          But then at 1920,1080 it records 2x too fast (Even tho larger?)

    -> Makes sense: since there's only half as many frames logged, and expect to be at 30FPS
        it's playing those frames twice as fast as it should.

    [x] let's count frames on each rez

    >python writevid1.py --showvid --time 5 --savedir data/aug2018/misc/ --framesize 1920,1080 --logfps
    data/aug2018/misc/output6.avi :  9621  kb
    numFrames recorded =  83

    >python writevid1.py --showvid --time 5 --savedir data/aug2018/misc/ --framesize 1280,720 --logfps
    data/aug2018/misc/output7.avi :  7926  kb
    numFrames recorded =  141

    >python writevid1.py --showvid --time 5 --savedir data/aug2018/misc/  --logfps
    data/aug2018/misc/output8.avi :  2491  kb
    numFrames recorded =  143

    [ ] Let's investigate this warning message:
    
        [OpenH264] this = 0x05FE2C70, Warning:bEnableFrameSkip = 0,bitrate can't be controlled for RC_QUALITY_MODE,RC_BITRATE_MODE and RC_TIMESTAMP_MODE without enabling skip frame.

    [ ] Let's look at timestamps on vid via VLC


[ ] Can you get faster processing without doing showvid?
[ ] Can you get faster processing with separate thread?
[ ] Can you get steadier perf after waiting fro a warm-up?
[ ] Can we getter better perf with all frames in memory untill end
    [x] This is 32-bit proc => max_size = 2GB?    """ [MSC v.1500 32 bit (Intel)] on win32 """  
    [ ] calc in-proc size of the frame
    [ ] calc perf time of each component, using time.time and cprofile, timeit


[ ] Might need to add an ffmpeg processing module, e.g. to change frame count, playback fps etc

[ ] Build tests, then exapnd into gui and meta

[ ] Gui's main job, besides start/stop is r/w meta-settings



7/18

[x] basecamp on writevid1, remove cruft

[ ] build some tests for writevid1

[x] build change framesize for writevid1
    [x] toggleframe?
    [x] need to change framesize on VidWrite

[x] camnum arg on writevid1

[ ] put setgain / getcam into camprobe util
    two tests:
     1. setgain prop, see if when you get props it has changed 
     2. take two picture with diff gain and see if one is darker

Other Tasks
[ ] What are commands to check version of opencv, numpy, python, etc
[ ] Separate ReadingFrames from WritingFrames which could make FPS higher (?)




7/17

build PROCESSES!
    well documented
    well tested
    that work together

writevid1.py | fbf2.py  | fdiff1.py

need a summary utility to display file-size, recording-length, frame-size, etc..
    and this should run like 'ls' for all files in directory
need a comparison in size of vid and size of frame between different encoding schemes
need a module for writing a video
need a module for displaying a video

[x] how to eliminate the "windows popup" codec request before writevid1 runs?
    appears to happen for .avi but not h264
    does it happen on mp4?

[ ] need to be able to record different size vids in writevid.py
[ ] set different frame rates
    [ ] verify different frame rates

[ ] get cv2 intellisense in vscode
    [x] it works in ipython
[x] why can't I write out h264 in fdiff1?
    because theres no h264.dll on /data/ path
    [x] try from main ppd/ path - yes, works
    [ ] what happens when you import modules

Modules:
[x] build unique-fn module
[ ] build a set cam params module
[ ] build a show video with time-sleep lag

Scripts:
[ ] build a vid probe util
[ ] build a help function for each script
[ ] build a current_params script which writes current-default-meta-data to meta-data-db on writevid1
[ ] commands.txt becomes a way to run multiple scripts together
[ ] rewrite fbf

Analysises:
[ ] relative size of different codecs
    [ ] for arbitrary videos
    [ ] for vids with just a moving ball
    [ ] half-way between: a person moving and a ball bouncing
    [ ] what does the rpi send best?

Smaller Tasks:
[x] import vidwriter:VidWriter into main scripts
[ ] get all the available codecs by prompt then VidWriter.getcodec()
[ ] variable framesize for videowriter
[x] uniqueFn implement ext=None

[ ] Try Codecs
    [ ] XVID
    [ ] mp4
    [ ] MJPG
    [ ] Lossless

[x] organize video data
[ ] sync data folder with drive

[ ] how to use cursor on opencv windows?
    [ ] to select a region, see fast-tracking video example
    [ ] to select a region to zoom

[x] try out test_vid_sizes
For all three cameras (laptop 1 + 2) & webcam (c920):
(640, 480)   True
(1280, 720)   True
(1280, 960)   False
(1920, 1080)   True

Idea: _CVT_ the fdiff frames to a color close to the ball, then do a diff
        which will let us maximize the diff for only the ball
  





7/9

I need to build a list of tasks and start executing:
I want an example of laptop/pi picture working
then I really want to test that optical flow thing
This seems helpful: fast tracking in opencv
    https://www.youtube.com/watch?v=X6rPdRZzgjg
    https://github.com/osmaa/pinymotion/blob/master/pinymotion.py

Questions:
how to play .avi's?
how to play h264's?
how to send h264/other-format over stream?




General Thoughts:
This is a process problem, not a beautiful code problem. Since we don't know how the solution looks at the beginning, we need the processes to iterate there.

Remember, the idea was to use two cameras for mo-cap: one for noticing diffs quickly, the other for precisely locating ball


Worskapce Discoveries:
notes/commands.txt has pi-server instructions
notes/notes-dec.txt has concise and useful info


7/7

build high-level todos
re-run and record main commands

High Level Todos:

Need to build a script that saves videos
Need to create a variety of videos:
    very distant ball
    bouncing ball, 
        different backgrounds
        different fps
    different cameras
    different cam params
Need to create meta data for each recording
Need to build library of videos and frames
A way to run algos onto all test-vids
Need to create unit tests for functionality?
Build a sqlite db that stores settings for thresh levels
    and track-algo params
Do a bunch of exploratory analysis beyond simple-thresh
    optical flow
    edge detection
    circle recognition
Rethink the approach to bounding box: create a circle and add
the area not included as color to absorb
"Find some positive": expand the thresh range to search for a 
small ball

Common Commands:
how to connect ot rpi over socket?
what flags make a difference on adaptive_thresh
fbf works? is valuable tho?


12/17

x Picamera working without errors
doesnt timeout here:
    Traceback (most recent call last):
    File "adaptive_thresh.py", line 314, in <module>
        main()
    File "adaptive_thresh.py", line 126, in main
        vc = initCam('pi_cam')
    File "C:\Users\wsutt\Desktop\files\ppd\ppd\modules\Camera.py", line 51, in initCam
        return MyPiCamera()
    File "C:\Users\wsutt\Desktop\files\ppd\ppd\modules\Camera.py", line 18, in __init__
        self.connection = self.server_socket.accept()[0].makefile('rb')
    File "C:\Python27\lib\socket.py", line 206, in accept
        sock, addr = self._sock.accept()
    KeyboardInterrupt
Picamera init cmd arg
Picamera set params
Picamera rotate controls
Picamera as a secondary camera

print FPS to cmdline



12/16

check the individual times of streaming. Can you read more quickly right at the beginning?

dont print out, does that save time?

x can we read faster if we skip processing? kinda not

different thread to read and record?

Add the streaming to adaptive_thresh


12/16

x Create a git basecamp

x Find a way to ftp or scp from laptop -> rpi
    got filezilla 3.29
    sitemanager:
        use port 22
        saved as pi_wifi_1

x Verfiy camera.capture_sequence speed
x    extend to verify the final image is saved
x    verfied at 29.5 fps, using video port, 640

x Can you  get a faster capture_sequence ?
x    by altering fps and exposure? YES but FOV is limited.
        at request 60fps, we get 58
            Captured 120 images at 58.63fps
            10.0.0.123 - - [16/Dec/2017 19:15:42] "GET /take6/ HTTP/1.1" 200 -

     by threading?

x add an argparse for client

x Verfiy Ethernet throughput speed

Build a bach script for ops
    workon cv
    export FLASK_APP=camera-server.py
    flask run --host=0.0.0.0

Build simple recipes and benchmarks collection
    send an already saved image
        wifi vs ethernet
    send a bunch of tiny images
        wifi vs ethernet
    
    basic responses
        send text
        send img
        send a stream
        send data in the url

    build a global Camera class in camera-server.py
        configure requests
        and capture requests

Find a way to do X11 on pi


12/12
https://stackoverflow.com/questions/29065624/using-with-inside-a-thread-in-python-picamera-opencv

12/10

why doesnt iterThreshA change for RGB on set_thresh decrease? But HSV does?

try simple flask on rpi, record time
    local server time
    ethernet connected time
    compare against SimpleHTTPServer

how to get flask threaded=True to run?


12/8

x add options for camera capture size
x add filecam
x add outer loop to reset camera
x dont mirror camera_usb=1
record a video
write a small utility that calculates fps from time in video


12/2

x find all camera sizes
x hello world on the pi-camera

12/1

working well at 10 feet
1280p
rgb: (orange ball) [  0  96 192] [ 88 232 255]
blur 11, repair 2

green sharpie:  [ 15 106  86] [ 81 171 148]

increasing thresh_pct > 0.95 helps with motion blur

11/24

x agenda nextstep triggers them all - sw_ not reset?, or gui firing too much?
x test and debug agenda reset
x it does create a new folder in write_dir for each agenda
x does it reset for a new color ball? yes.
x it takes the first img after reset from the last old_pos for tracking_frame
x two pictures from initial center_tracking frame, make it one
x set the gui from a output_rgb_set
x extend to hsv
x refactor globeGui
x refactor gui to eliminate extraneous
x print output as values
x little wider display
x update gui-hsv-output after runIterThreshA
x verify that thresh_pct is different
x better printout for solves
x less verbose
x have outcome stats display
x Proof-of-Concept: do iterThresh with 1 training image, then multiple training images
x better perf? - yes
x at least wider thresh? -yes
x call iterThreshB from gui
x tracking params from gui
x agenda.combine_threshes: transformA(img.copy(), blur = 1, b_hsv = True)

iterThreshB outputs initthresh? Not exactly but still seems sketchy

Show-How-Far-You-Can-See-Ball
x tracking success displayed to output
x display shows wide circle around putative ball
also diagnose iterThreshB on 
also display radius and num_of_cnts_found on display

Most important:

    Resize

    File_Cam


Can do an iterthreshB agenda creating a mask where there are FP's?

do the tracking without resize
find a way to know if it sees anything and what width?
    "is it seeing the ball way out there? What's the furthest it can see the ball?"




x take off delay for startup
x preview-display horizontal mirroring
x display other types of images  -> 2x cv windows?
x hist for the rect
x background histos
x flip transformed image
x params for adapt thresh
x options
x proc histo only onshow
x change frame and get histo
x show background_histos
x adaptive y_lim
x why doesnt the hard coded y_hi change for 6th plot?
x make subplot 2 by 3 not 1 by 6
x make a reset of current_tracking_frame force a resize in histos
x display a transform window
x organize function to imports
x pull out np.histogram from updating function
x large blocks to functions
x ptions to a function
x global modify from options-func
x display transform and mask as smaller
x need to get globals set in Options
x pause on a picture for searching for thresh_params
x write-out pics
x write rect non-transform
x write all to same dir
x write other pics
x frame isnt copied?  

tranform and regular img track

do a np.histo work on n
threshold pct array
expand and contract threshold

waitkey switch statement
write out video
print in raw_input with carriage return
histo labeled hsv for hsv histos
options for backghisto
do a thresh on each histo
display info in histo title

adapt_thresh for saved videos
eval in options
3rd rgb-plot-pane rect before vs. current "background before ball was there"
search_thresh
do agenda
zeromq messaging for log
run on pi

#Questions

Q does a switch statement make waitkey more responsive?
Q resolve ugly globals code
Q organize imports to and classes

> python adaptive_thresh.py --showbackghisto --showhisto

> set_thresh 80 100 100 130 200 200
150 130 90 200 210 200
100 130 90 200 210 200
0 130 90 100 210 200

speed up histo proc:
    keep it all numpy
    only when updating
    create tests, test data


#Questions

Locate / Track 
    -  how many shapes are there?

#Notes

why current LiveHist is bad
    matplotlib window can't be moved after startup
    makes peview-display jittery
        could this be solved with threading?
    makes cvWaitkeys not responsive

    solution is an html/js app in browser with http interface

