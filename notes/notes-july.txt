
7/17

When we even save frames as jpg's we're compressing from 
what a "live" real-time processing is seeing. Need to save the 
uncompressed image. 
    Or at least view a diff between image and uncompressed


Video Codecs
    Lossless compression video?
    
    https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_gui/py_video_display/py_video_display.html
        In Fedora: DIVX, XVID, MJPG, X264, WMV1, WMV2. (XVID is more preferable. MJPG results in high size video. X264 gives very small size video)
        In Windows: DIVX (More to be tested and added)
        In OSX : (I donâ€™t have access to OSX. Can some one fill this?)
        FourCC code is passed as cv2.VideoWriter_fourcc('M','J','P','G') or cv2.VideoWriter_fourcc(*'MJPG) for MJPG.


OpenCV questions with "ping pong"
    http://answers.opencv.org/questions/scope:all/sort:activity-desc/page:1/query:ping%20pong/
    http://answers.opencv.org/question/92131/calculate-the-object-distance-from-camera/
    http://answers.opencv.org/question/119635/can-haar-or-cascade-classifiers-be-accurate-enough-in-detecting-object-size/
    http://answers.opencv.org/question/176656/need-to-make-a-tracker-that-detects-ping-pong-balls-and-then-display-a-color-on-the-right-side-of-the-screen-corresponding-to-where-the-ping-pong-ball/
    http://answers.opencv.org/question/191798/covariance-matrices-for-kalman-filter/
    http://answers.opencv.org/question/193147/arduino-opencv-project-tracker-ball/

    Interesting ideas:
         you take a picture of your ball at a known distance, then you can solve the equation for the unknown constant, and then use that in all your future calculations. Measure carefully, or better yet, take multiple pictures at different known distances and average the results together.
         Android OpenCV
            https://docs.opencv.org/master/df/d65/tutorial_table_of_content_introduction.html
            https://github.com/opencv/opencv/tree/master/samples/android

Good Motion Tracker with frame-diff:
    https://www.dropbox.com/s/67gtew15zn2rpun/motionTracking.cpp?dl=0

A picamera frame-diff:
    https://github.com/osmaa/pinymotion/blob/master/pinymotion.py



